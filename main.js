(()=>{"use strict";var t={273:(t,e,i)=>{i.r(e)},541:(t,e,i)=>{i.r(e)},938:(t,e,i)=>{i.r(e)},221:(t,e,i)=>{i.r(e)}},e={};function i(s){var n=e[s];if(void 0!==n)return n.exports;var a=e[s]={exports:{}};return t[s](a,a.exports,i),a.exports}i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{var t;i.g.importScripts&&(t=i.g.location+"");var e=i.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var s=e.getElementsByTagName("script");if(s.length)for(var n=s.length-1;n>-1&&!t;)t=s[n--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),i.p=t})(),(()=>{i(541);class t{constructor(){this.container=null,this.cardTextListeners=[],this.boardClickListeners=[],this.boardDownListeners=[],this.mouseMoveListeners=[],this.mouseUpListeners=[],this.mouseUp=this.onMouseUp.bind(this),this.mouseMove=this.onMouseMove.bind(this)}bindToDOM(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t}checkBinding(){if(null===this.container)throw new Error("ListEditPlay not bind to DOM")}addBoardClickListeners(t){this.boardClickListeners.push(t)}addBoardDownListeners(t){this.boardDownListeners.push(t)}addMouseMoveListeners(t){this.mouseMoveListeners.push(t)}addMouseUpListeners(t){this.mouseUpListeners.push(t)}drawUI(){this.checkBinding(),this.container.innerHTML='\n      <H3>\n        Задача № 1<br>\n        Trello - система управления задачами.\n      </H3>\n      <div class="board" data-id="board">\n        <div class="list-container" data-id="todo" data-board="column">\n          <div class="list-name">Сделать</div>\n          \x3c!-- список карточек --\x3e\n          <ul class="list-card" data-id="card-list"></ul>\n          <div class="card-creator hide" data-id="creator-div">\n            <div class="card-creator-text-container card">\n              <textarea class="card-creator-text" data-id="creator-text" placeholder="Текст карточки"></textarea>\n            </div>\n            <div class="card-creator-controls">\n              <div class="card-creator-add" data-id="create-card">Добавить карточку</div>\n              <div class="card-creator-close" data-id="creator-close"></div>\n            </div>\n          </div>\n          <div class="card-add-btn" data-id="creator-open">+ Добавить карточку</div>\n        </div>\n        \n        <div class="list-container" data-id="progress" data-board="column">\n          <div class="list-name">В процессе</div>\n          \x3c!-- список карточек --\x3e\n          <ul class="list-card" data-id="card-list"></ul>\n          <div class="card-creator hide" data-id="creator-div">\n            <div class="card-creator-text-container card">\n              <textarea class="card-creator-text" data-id="creator-text" placeholder="Текст карточки"></textarea>\n            </div>\n            <div class="card-creator-controls">\n              <div class="card-creator-add" data-id="create-card">Добавить карточку</div>\n              <div class="card-creator-close" data-id="creator-close"></div>\n            </div>\n          </div>\n          <div class="card-add-btn" data-id="creator-open">+ Добавить карточку</div>\n        </div>\n\n        <div class="list-container" data-id="done" data-board="column">\n          <div class="list-name">Готово</div>\n          \x3c!-- список карточек --\x3e\n          <ul class="list-card" data-id="card-list"></ul>\n          <div class="card-creator hide" data-id="creator-div">\n            <div class="card-creator-text-container card">\n              <textarea class="card-creator-text" data-id="creator-text" placeholder="Текст карточки"></textarea>\n            </div>\n            <div class="card-creator-controls">\n              <div class="card-creator-add" data-id="create-card">Добавить карточку</div>\n              <div class="card-creator-close" data-id="creator-close"></div>\n            </div>\n          </div>\n          <div class="card-add-btn" data-id="creator-open">+ Добавить карточку</div>\n        </div>\n        \n      </div>\n      <div class="card card-drag hide"></div>\n    ',this.container.classList.add("task-one"),this.todo=this.container.querySelector('[data-id="todo"]'),this.progress=this.container.querySelector('[data-id="progress"]'),this.done=this.container.querySelector('[data-id="done"]'),this.board=this.container.querySelector('[data-id="board"]'),this.board.addEventListener("click",(t=>this.onBoardClick(t))),this.board.addEventListener("pointerdown",(t=>this.onBoardDown(t))),this.cardDrag=this.container.querySelector(".card-drag")}clearHTML(){this.container.classList.remove("task-one"),this.container.innerHTML=""}static cardHtml(t,e="card"){const i=document.createElement("li"),s=document.createElement("div"),n=document.createElement("div");return s.textContent=t,s.classList.add("card-text"),s.dataset.id="card-text",n.classList.add("card-del"),n.dataset.id="card-del",i.classList.add("card"),i.dataset.id=e,i.appendChild(s),i.appendChild(n),i}renderCardList(t,e){for(let i=0;i<t.length;i+=1){const s=document.createElement("div"),n=this[t[i]].querySelector('[data-id="card-list"]');n.innerHTML="";for(let n=0;n<e[t[i]].length;n+=1)s.appendChild(this.constructor.cardHtml(e[t[i]][n]));n.innerHTML=s.innerHTML}}static containerElements(t){return{creator:t.querySelector('[data-id="creator-div"]'),btnOpen:t.querySelector('[data-id="creator-open"]')}}static onBtnForOpenCard(e){const{creator:i,btnOpen:s}=t.containerElements(e);i.classList.remove("hide"),s.classList.add("hide")}static onBtnForCloseCreator(e){const{creator:i,btnOpen:s}=t.containerElements(e);i.classList.add("hide"),s.classList.remove("hide")}static onCreateCard(e){const{creator:i,btnOpen:s}=t.containerElements(e);i.querySelector('[data-id="creator-text"]').value="",i.classList.add("hide"),s.classList.remove("hide")}onBoardClick(t){if(t.preventDefault(),!this.listContainer)return;const{dataIdTarget:e,dataIdCardList:i}=this;if(!("card-del"===e||"creator-open"===e||"create-card"===e||"creator-close"===e))return;const s=this.listContainer.querySelector('[data-id="creator-text"]').value;this.boardClickListeners.forEach((t=>t.call(null,{dataIdTarget:e,text:s,dataIdCardList:i})))}onBoardDown(t){if(this.targetEl=t.target,this.listContainer=this.targetEl.closest(".list-container"),!this.listContainer)return;if(this.dataIdTarget=this.targetEl.dataset.id,this.dataIdCardList=this.listContainer.dataset.id,"card-text"!==this.dataIdTarget&&"card-del"!==this.dataIdTarget||(this.card=this.targetEl.closest(".card")),"card-text"!==this.dataIdTarget)return;t.preventDefault();const{clientX:e,clientY:i}=t;this.cursorX=e-this.card.getBoundingClientRect().left,this.cursorY=i-this.card.getBoundingClientRect().top,this.boardDownListeners.forEach((t=>t.call(null,{clientX:e,clientY:i})))}cardDraggedIndex(){const{card:t}=this;if(!t)return!1;const e=t.closest('[data-board="column"]'),i=e.querySelectorAll('[data-id="card"]');return{index:Array.from(i).indexOf(t),textEl:t.querySelector('[data-id="card-text"]').textContent,listID:e.dataset.id}}dragged(t){t&&(this.card.classList.add("dragged"),this.cardDrag.innerHTML=this.card.innerHTML,this.cardDrag.classList.remove("hide")),t||(this.card.classList.remove("dragged"),this.cardDrag.innerHTML="",this.cardDrag.classList.add("hide"))}addMouseEventsDND(){document.addEventListener("pointerup",this.mouseUp),document.addEventListener("pointermove",this.mouseMove)}delMouseEventsDND(){document.removeEventListener("pointermove",this.mouseMove),document.removeEventListener("pointerup",this.mouseUp)}onMouseUp(t){t.preventDefault(),this.mouseUpListeners.forEach((t=>t.call(null,"")))}onMouseMove(t){t.preventDefault();const{clientX:e,clientY:i}=t;this.mouseMoveListeners.forEach((t=>t.call(null,{clientX:e,clientY:i})))}dragAndBotCardRect(t){const e=this.cardDrag.getBoundingClientRect();if(this.bottomEls=document.elementsFromPoint(e.left+e.width/2,t),this.cardBotElColumn=this.bottomEls.find((t=>"column"===t.dataset.board)),this.cardBotEl=this.bottomEls.find((t=>"card"===t.dataset.id)),this.cardBotElColumn&&!this.cardBotEl){this.cardBotElList=this.cardBotElColumn.querySelector('[data-id="card-list"]');return 0===this.cardBotElList.querySelectorAll('[data-id="card"]').length&&{dragRect:{},cardBotRect:{},column:!0}}if(this.cardBotEl){if(this.cardBotEl.classList.contains("dragged"))return!1;return{dragRect:e,cardBotRect:this.cardBotEl.getBoundingClientRect(),column:!1}}return!1}dragAndDropDOM(t){return t.column?(this.cardBotElList.appendChild(this.card),!0):t.dragX&&t.dragTopY&&this.cardBotEl.previousSibling!==this.card?(this.cardBotEl.before(this.card),!0):!(!t.dragX||!t.dragBotY||this.cardBotEl.nextSibling===this.card)&&(this.cardBotEl.after(this.card),!0)}position(t,e){const i=e-this.cursorY,s=t-this.cursorX;this.cardDrag.style.top=`${i}px`,this.cardDrag.style.left=`${s}px`}}class e{constructor(t){this.trelloDOM=t,this.cardCut={},this.cardPaste={},this.board={done:[],progress:[],todo:[]}}init(){this.loadSave(),this.renderingAndSave(),this.trelloDOM.addBoardClickListeners(this.onBoardClick.bind(this)),this.trelloDOM.addBoardDownListeners(this.onBoardDown.bind(this)),this.trelloDOM.addMouseMoveListeners(this.onMouseMove.bind(this)),this.trelloDOM.addMouseUpListeners(this.onMouseUp.bind(this))}loadSave(){const t=JSON.parse(localStorage.getItem("Trello"));t&&(this.board=t)}onBoardClick({dataIdTarget:t,text:e,dataIdCardList:i}){if("creator-open"===t&&this.trelloDOM.constructor.onBtnForOpenCard(this.trelloDOM.listContainer),"creator-close"===t&&this.trelloDOM.constructor.onBtnForCloseCreator(this.trelloDOM.listContainer),"create-card"===t&&e&&(this.trelloDOM.constructor.onCreateCard(this.trelloDOM.listContainer),this.board[i].push(e),this.renderingAndSave([i])),"card-del"===t){const{index:t,textEl:e}=this.trelloDOM.cardDraggedIndex();if(this.board[i][t]!==e)return void this.renderingAndSave();this.board[i].splice(t,1),this.renderingAndSave([i])}}onBoardDown({clientX:t,clientY:e}){this.cardCut=this.trelloDOM.cardDraggedIndex(),this.trelloDOM.position(t,e),this.trelloDOM.dragged(!0),this.trelloDOM.addMouseEventsDND()}onMouseMove({clientX:t,clientY:e}){this.trelloDOM.position(t,e);let i=!1;if(this.dragged=this.trelloDOM.dragAndBotCardRect(e),!this.dragged)return;const{dragRect:s,cardBotRect:n,column:a}=this.dragged;if(!a){const t=n.top+n.height/2,e=s.left+s.width/2,a=s.top+s.height/2,r=n.right>e&&n.left<e,o=t>a&&n.top<a,d=t<a&&n.bottom>a;i=this.trelloDOM.dragAndDropDOM({dragX:r,dragTopY:o,dragBotY:d})}if(a){const t={dragX:!1,dragTopY:!1,dragBotY:!1,column:a};i=this.trelloDOM.dragAndDropDOM(t)}i&&(this.cardPaste=this.trelloDOM.cardDraggedIndex(),this.board[this.cardCut.listID].splice(this.cardCut.index,1),this.board[this.cardPaste.listID].splice(this.cardPaste.index,0,this.cardPaste.textEl),this.cardCut=this.cardPaste)}onMouseUp(){this.trelloDOM.dragged(!1),this.trelloDOM.delMouseEventsDND(),this.renderingAndSave()}renderingAndSave(t=["todo","progress","done"]){this.trelloDOM.renderCardList(t,this.board),localStorage.setItem("Trello",JSON.stringify(this.board))}}i(221);class s{constructor(){this.container=null,this.inputChangeListeners=[],this.delImgListeners=[]}bindToDOM(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t}checkBinding(){if(null===this.container)throw new Error("GalleryPlay not bind to DOM")}drawUI(){this.checkBinding(),this.container.innerHTML='\n      <H3 class="gallery-header">\n        Задача № 2<br>\n        Modern Image Manager* (задача со звёздочкой)\n      </H3>\n      <div class="gallery-container">\n        <form data-id="gallery-form" class="gallery-form">\n          <div data-id="gallery-file" class="gallery-file-container">\n            <input class="gallery-file-input" type="file" accept=".jpg, .jpeg, .png">\n            <label class="gallery-file-label">Перетащите файлы сюда или нажмите, чтобы выбрать</label>\n          </div>\n        </form>\n        <div class="gallery-header">Галерея фотографий</div>\n        <div data-id="container-galery-img" class="container-galery-img">\n        </div>\n      </div>\n    ',this.container.classList.add("task-two"),this.imgContainer=this.container.querySelector("[data-id=container-galery-img]"),this.fileContainer=this.container.querySelector("[data-id=gallery-file]"),this.fileInput=this.container.querySelector(".gallery-file-input"),this.fileContainer.addEventListener("click",(()=>{this.fileInput.dispatchEvent(new MouseEvent("click"))})),this.fileContainer.addEventListener("dragover",(t=>{t.preventDefault()})),this.fileContainer.addEventListener("drop",(t=>this.onInputChange(t))),this.fileInput.addEventListener("change",(t=>this.onInputChange(t))),this.imgContainer.addEventListener("click",(t=>this.onDelImg(t)))}htmlImg(t,e){const i=document.createElement("figure");i.innerHTML=`\n      <img class="galery-img" src="${e}" alt="${t}">\n      <figcaption>${t}</figcaption>\n      <div data-id="img-del">X</div>\n    `,i.classList.add("gallery-figure"),this.imgContainer.appendChild(i)}addInputChangeListeners(t){this.inputChangeListeners.push(t)}addDelImgListeners(t){this.delImgListeners.push(t)}onInputChange(t){t.preventDefault();let e=!1;const i=t.dataTransfer&&t.dataTransfer.files&&t.dataTransfer.files[0],s=this.fileInput.files&&this.fileInput.files[0];if(e=i||s,!e)return;const n=URL.createObjectURL(e),{name:a,type:r}=e;this.fileInput.value="",this.inputChangeListeners.forEach((t=>t.call(null,{name:a,type:r,fileUrl:n})))}onDelImg(t){if(t.preventDefault(),"img-del"!==t.target.dataset.id)return;const e=this.imgContainer.querySelectorAll(".gallery-figure"),i=t.target.closest(".gallery-figure"),s=Array.from(e).indexOf(i),n=i.querySelector(".galery-img"),{src:a,alt:r}=n;this.delImgListeners.forEach((t=>t.call(null,{imgIndex:s,src:a,alt:r})))}clearImgs(){this.imgContainer.innerHTML=""}clearHTML(){this.container.classList.remove("task-two"),this.container.innerHTML=""}}class n{constructor(t){this.galleryDOM=t,this.imgs=[{name:"Фронтенд",fileUrl:"https://i.pinimg.com/originals/9e/91/61/9e91614e573ebbbefbfda1ae2a76dc6f.jpg"},{name:"Бэкенд",fileUrl:"http://static.uicit.uz/crop/1/7/736_736_90_1719082062.jpg"}]}init(){this.galleryDOM.addDelImgListeners(this.onDelImg.bind(this)),this.galleryDOM.addInputChangeListeners(this.onInputChange.bind(this)),this.renderingTask()}onInputChange({name:t,type:e,fileUrl:i}){const s=function(t){return["image/jpeg","image/png"].includes(t,0)}(e);s&&(this.imgs.push({name:t,fileUrl:i}),this.renderingTask())}onDelImg({imgIndex:t,src:e,alt:i}){const s=this.imgs[t];s&&(s.name===i&&s.fileUrl===e&&this.imgs.splice(t,1),this.renderingTask())}renderingTask(){this.galleryDOM.clearImgs();const t=this.imgs;for(let e=0;e<t.length;e+=1)this.galleryDOM.htmlImg(t[e].name,t[e].fileUrl)}}i(938);class a{constructor(){this.container=null,this.filesClickListeners=[]}bindToDOM(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t}checkBinding(){if(null===this.container)throw new Error("GalleryPlay not bind to DOM")}async drawUI(){this.checkBinding(),this.container.innerHTML='\n      <div class="cell">\n        <H3 class="header">\n          Задача № 3<br>\n          Download Manager* (задача со звёздочкой)\n        </H3>\n        <div class="downloader-container">\n          <div class="file-header">Доступные файлы (без смс и регистрации):</div>\n          <div class="file-list">\n            \x3c!-- контейнеры с файлами --\x3e\n          </div>\n        </div>\n        <div class="file-size-text">Вы уже скачали: <span class="file-size-number">0</span></div>\n      </div>\n    ',this.container.classList.add("task-three"),this.fileList=this.container.querySelector(".file-list"),this.fileSizeEl=this.container.querySelector(".file-size-number"),this.fileList.addEventListener("click",(t=>this.onFilesClick(t)))}htmlFilecontainer(t,e,i){const s=document.createElement("li"),n=document.createElement("div"),a=document.createElement("div"),r=document.createElement("a");s.classList.add("file-container"),n.classList.add("file-name"),a.classList.add("file-size"),r.classList.add("file-link"),r.dataset.id="file-link",n.textContent=t,a.textContent=e,r.textContent="Download",r.href=i,r.rel="noopener",r.download=t,s.appendChild(n),s.appendChild(a),s.appendChild(r),this.fileList.appendChild(s)}addFilesClickListeners(t){this.filesClickListeners.push(t)}onFilesClick(t){this.link=t.target,this.link.hasAttribute("data-id")&&"file-link"===this.link.dataset.id&&this.filesClickListeners.forEach((t=>t.call(null,!0)))}sizeFile(){const t=this.link.href,e=new File([t],"");(new FileReader).readAsDataURL(e);const i=e.size;return i||0}sizeDownlodedDom(t){this.fileSizeEl.textContent=t}async pdfToBase64(t){const e=await fetch(t);if(!e.ok)return!1;const i=await e.blob(),{size:s}=i;return{size:s,urlBase64:await new Promise((t=>{const e=new FileReader;e.onload=()=>t(e.result),e.readAsDataURL(i)}))}}clearFiles(){this.fileList.innerHTML=""}clearHTML(){this.container.classList.remove("task-three"),this.container.innerHTML=""}}const r=i.p+"books/Storage Standard.pdf",o=i.p+"books/Streams Standard.pdf",d=i.p+"books/XMLHttpRequest Standard.pdf";class l{constructor(t){this.downManDOM=t,this.totalSize=0,this.books=[{name:"Storage Standard",size:"",url:r},{name:"Streams Standard",size:"",url:o},{name:"XMLHttpRequest Standard",size:"",url:d}]}async init(){this.downManDOM.addFilesClickListeners(this.onFilesClick.bind(this)),await this.chengeUrl(),this.renderingFiles()}async chengeUrl(){for(let t=0;t<this.books.length;t+=1){const{url:e}=this.books[t];if(!e)return;const i=await this.downManDOM.pdfToBase64(e);if(!i)return;const{size:s,urlBase64:n}=i;this.books[t].size=l.size(s),this.books[t].url=n}}onFilesClick(t){if(!t)return;const e=this.downManDOM.sizeFile();this.totalSize+=e;const i=l.size(this.totalSize);this.downManDOM.sizeDownlodedDom(i)}renderingFiles(){this.downManDOM.clearFiles();const t=this.books;for(let e=0;e<t.length;e+=1)this.downManDOM.htmlFilecontainer(t[e].name,t[e].size,t[e].url)}static size(t){if(!t)return!1;const e=t/1024,i=e/1024;return i<1&&e>0?`${e.toFixed(0)} Kb`:i>1&&`${i.toFixed(2)} Mb`}}i(273);class c{constructor(){this.container=null,this.taskOneInited=!1,this.taskTwoInited=!1,this.taskThreeInited=!1}static checkContainer(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement")}bindToDOM(t){c.checkContainer(t),this.container=t}bindTaskOneToDOM(t){c.checkContainer(t),this.containerTaskOne=t}bindTaskTwoToDOM(t){c.checkContainer(t),this.containerTaskTwo=t}bindTaskThreeToDOM(t){c.checkContainer(t),this.containerTaskThree=t}checkBinding(){if(null===this.container)throw new Error("... not bind to DOM")}drawUI(){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="taskOne" class="btn">Задача № 1</button>\n        <button data-id="taskTwo" class="btn">Задача № 2</button>\n        <button data-id="taskThree" class="btn">Задача № 3</button>\n      </div>\n    ',this.taskOne=this.container.querySelector("[data-id=taskOne]"),this.taskTwo=this.container.querySelector("[data-id=taskTwo]"),this.taskThree=this.container.querySelector("[data-id=taskThree]"),this.taskOne.addEventListener("click",(t=>this.onTaskOneClick(t))),this.taskTwo.addEventListener("click",(t=>this.onTaskTwoClick(t))),this.taskThree.addEventListener("click",(t=>this.onTaskThreeClick(t)))}onTaskOneClick(t){t.preventDefault(),this.taskRemover(),this.taskOneInited||this.taskOneInit(),this.taskOneInited=!this.taskOneInited,this.taskTwoInited=!1,this.taskThreeInited=!1}onTaskTwoClick(t){t.preventDefault(),this.taskRemover(),this.taskTwoInited||this.taskTwoInit(),this.taskOneInited=!1,this.taskTwoInited=!this.taskTwoInited,this.taskThreeInited=!1}onTaskThreeClick(t){t.preventDefault(),this.taskRemover(),this.taskThreeInited||this.taskThreeInit(),this.taskOneInited=!1,this.taskTwoInited=!1,this.taskThreeInited=!this.taskThreeInited}taskRemover(){this.taskOneInited&&this.taskOneRemove(),this.taskTwoInited&&this.taskTwoRemove(),this.taskThreeInited&&this.taskThreeRemove()}taskOneInit(){this.taskOneDOM=new t,this.taskOneDOM.bindToDOM(this.containerTaskOne),this.taskOneDOM.drawUI(),this.taskOneController=new e(this.taskOneDOM),this.taskOneController.init()}taskTwoInit(){this.taskTwoDOM=new s,this.taskTwoDOM.bindToDOM(this.containerTaskTwo),this.taskTwoDOM.drawUI(),this.taskTwoController=new n(this.taskTwoDOM),this.taskTwoController.init()}taskThreeInit(){this.taskThreeDOM=new a,this.taskThreeDOM.bindToDOM(this.containerTaskThree),this.taskThreeDOM.drawUI(),this.taskThreeController=new l(this.taskThreeDOM),this.taskThreeController.init()}taskOneRemove(){this.taskOneController.trelloDOM.clearHTML(),this.taskOneDOM="",this.taskOneController=""}taskTwoRemove(){this.taskTwoController.galleryDOM.clearHTML(),this.taskTwoDOM="",this.taskTwoController=""}taskThreeRemove(){this.taskThreeController.downManDOM.clearHTML(),this.taskThreeDOM="",this.taskThreeController=""}}const h=document.getElementById("nav"),u=document.getElementById("taskOne"),g=document.getElementById("taskTwo"),m=document.getElementById("taskThree"),p=new c;p.bindToDOM(h),p.bindTaskOneToDOM(u),p.bindTaskTwoToDOM(g),p.bindTaskThreeToDOM(m),p.drawUI(),console.log("app started")})()})();